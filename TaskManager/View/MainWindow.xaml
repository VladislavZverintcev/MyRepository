<Window x:Name="window" x:Class="TaskManager.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:TaskManager"
        xmlns:vm="clr-namespace:TaskManager.ViewModel"
        xmlns:m="clr-namespace:TaskManager.Model"
        xmlns:ctr="clr-namespace:TaskManager.Controls"
        xmlns:prop="clr-namespace:TaskManager.Properties" 
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity" 
        xmlns:v="clr-namespace:TaskManager.View"
        mc:Ignorable="d"
        Title="TaskManager by V.Zverintsev" Height="500" Width="800"
        WindowStartupLocation="CenterScreen"
        MinHeight="300" MinWidth="500">
    <Window.DataContext>
        <vm:WorkTasksViewModel></vm:WorkTasksViewModel>
    </Window.DataContext>
    <Window.Resources>
        <Style x:Key="LabelAnnotation1" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource borderBrush}"/>
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style x:Key="LabelAnnotationMini" TargetType="Label">
            <Setter Property="Foreground" Value="{StaticResource textBrush2}"/>
            <Setter Property="FontSize" Value="10"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>

        <Style x:Key="TextBoxStyle1" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource gradientBrushTranspert}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="{StaticResource textBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource nullBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3,0"/>
            <Setter Property="CaretBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="{StaticResource selectColor2}" Offset="0" />
                            <GradientStop Color="{StaticResource selectColor}" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

        </Style>
        <Style x:Key="TextBoxStyleForNumeric" TargetType="TextBox">
            <Setter Property="Background" Value="{StaticResource mainBrushTranspert2}"/>
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="Foreground" Value="{StaticResource textBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource nullBrush}"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="Margin" Value="3,0"/>
            <Setter Property="CaretBrush">
                <Setter.Value>
                    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
                        <LinearGradientBrush.GradientStops>
                            <GradientStop Color="{StaticResource selectColor2}" Offset="0" />
                            <GradientStop Color="{StaticResource selectColor}" Offset="1" />
                        </LinearGradientBrush.GradientStops>
                    </LinearGradientBrush>
                </Setter.Value>
            </Setter>

        </Style>

        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Focusable" Value="false"/>

        </Style>
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="Visibility" Value="Hidden"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Black" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border CornerRadius="4" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1"  Width="Auto" Margin="1,0,1,0"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="0"/>
                    <RowDefinition Height="0.00001*"/>
                    <RowDefinition MaxHeight="0"/>
                </Grid.RowDefinitions>
                <Border Grid.RowSpan="3" CornerRadius="2" Background="{StaticResource gradientBrushTranspert}" />
                <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track Name="PART_Track" Grid.Row="1" IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="1,0,1,0" Background="{StaticResource mainBrushTranspert3}" BorderBrush="{StaticResource selectBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="18" Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z"/>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="0"/>
                    <ColumnDefinition Width="0.00001*"/>
                    <ColumnDefinition MaxWidth="0"/>
                </Grid.ColumnDefinitions>
                <Border Grid.ColumnSpan="3" CornerRadius="2" Background="{StaticResource gradientBrushTranspert}"/>
                <RepeatButton Grid.Column="0"  Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb Style="{StaticResource ScrollBarThumb}" Margin="0,1,0,1" Background="{StaticResource mainBrushTranspert3}" BorderBrush="{StaticResource selectBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton Grid.Column="2" Style="{StaticResource ScrollBarLineButton}" Width="18" Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
            </Grid>
        </ControlTemplate>

        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto"/>
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18"/>
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template" Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="StyleScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>
                            <ScrollContentPresenter Grid.Column="0" />
                            <ScrollBar Name="PART_VerticalScrollBar" Orientation="Vertical" Grid.Column="1" Value="{TemplateBinding VerticalOffset}" Maximum="{TemplateBinding ScrollableHeight}" ViewportSize="{TemplateBinding ViewportHeight}" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>
                            <ScrollBar Name="PART_HorizontalScrollBar" Orientation="Horizontal" Grid.Row="1" Value="{TemplateBinding HorizontalOffset}" Maximum="{TemplateBinding ScrollableWidth}" ViewportSize="{TemplateBinding ViewportWidth}" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="TextBoxBaseControlTemplate" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd" BorderBrush="{StaticResource selectBrush}"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="TextBoxBaseControlTemplateTName" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost"/>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ErrTriggerTName}" Value="false">
                                <Setter Property="BorderBrush"  Value="{StaticResource errBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ErrTriggerTName}" Value="true">
                                <Setter Property="BorderBrush"  Value="{StaticResource selectBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="TextBoxBaseControlTemplateForTHours" TargetType="{x:Type TextBoxBase}">
            <Border Background="{TemplateBinding Background}" 
                x:Name="Bd"
                BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="5">
                <ScrollViewer x:Name="PART_ContentHost"/>
                <Border.Style>
                    <Style TargetType="Border">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ErrTriggerTHours}" Value="false">
                                <Setter Property="BorderBrush"  Value="{StaticResource errBrush}"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding ErrTriggerTHours}" Value="true">
                                <Setter Property="BorderBrush"  Value="{StaticResource borderBrush}"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" TargetName="Bd"/>
                    <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                </Trigger>
                <Trigger Property="Width" Value="Auto">
                </Trigger>
                <Trigger Property="Height" Value="Auto">
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ButtonStyle1" TargetType="Button">
            <Setter Property="Control.Background" Value="{StaticResource gradientBrush}" />
            <Setter Property="Control.Foreground" Value="{StaticResource textBrush}" />
            <Setter Property="FontSize" Value="15"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Center"/>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}" BorderBrush="{StaticResource borderBrush}" BorderThickness="1" CornerRadius="3" Margin="1">
                            <ContentPresenter HorizontalAlignment="Center"
                                      VerticalAlignment="Center"/>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="{StaticResource selectBrush}"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Visibility" Value="Hidden"/>
                </Trigger>
            </Style.Triggers>

        </Style>

        <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="18" />
                </Grid.ColumnDefinitions>
                <Border x:Name="Border" Grid.ColumnSpan="2" CornerRadius="3" Background="{StaticResource mainBrush2}" 
                    BorderBrush="{StaticResource borderBrush}"  BorderThickness="1" />
                <Border x:Name="BorderToggle" Grid.Column="0" CornerRadius="3,0,0,3" Background="{StaticResource mainBrushTranspert2}"
                    BorderBrush="{StaticResource borderBrush}" Margin="1" BorderThickness="0,0,1,0" />
                <Path x:Name="Arrow" Grid.Column="1" Fill="{StaticResource selectBrush}" HorizontalAlignment="Center" VerticalAlignment="Center"
                  Data="M -2 0 L 2 4 L 6 0 Z"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="ToggleButton.IsMouseOver" Value="true">
                    <Setter TargetName="Border" Property="Background" Value="{StaticResource selectBrush}" />
                    <Setter TargetName="Border" Property="BorderThickness" Value="1" />
                    <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource selectBrush}" />
                    <Setter TargetName="Arrow" Property="Fill" Value="{StaticResource mainBrush}" />
                    <Setter TargetName="BorderToggle" Property="BorderBrush" Value="{StaticResource mainBrush}" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTextBox" TargetType="TextBox"/>


        <Style x:Key="{x:Type ComboBox}" TargetType="ComboBox">
            <Setter Property="Width" Value="Auto"/>
            <Setter Property="Height" Value="26"/>
            <Setter Property="FontFamily" Value="Calibri,Arial"/>
            <Setter Property="FontSize" Value="12"/>
            <Setter Property="Padding" Value="4"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Foreground" Value="{StaticResource textBrush}"/>
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="IsSynchronizedWithCurrentItem" Value="False"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ItemsPanel">
                <Setter.Value>
                    <ItemsPanelTemplate>
                        <VirtualizingStackPanel IsVirtualizing="True"/>
                    </ItemsPanelTemplate>
                </Setter.Value>
            </Setter>

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton Name="ToggleButton" Template="{StaticResource ComboBoxToggleButton}" Grid.Column="2" Focusable="false"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" ClickMode="Press"/>
                            <ContentPresenter Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="6,3,23,3" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" TextBlock.Foreground="{StaticResource textBrush}" />
                            <TextBox x:Name="PART_EditableTextBox" Style="{x:Null}" Template="{StaticResource ComboBoxTextBox}" HorizontalAlignment="Left" 
                                 VerticalAlignment="Center" Margin="6,3,23,3" Focusable="True" Background="Transparent" Visibility="Hidden" IsReadOnly="{TemplateBinding IsReadOnly}"/>
                            <Popup Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" AllowsTransparency="True" Focusable="False"
                               PopupAnimation="Slide" Margin="3,-8,-3,8">
                                <Grid Name="DropDown" SnapsToDevicePixels="True" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                    <Border x:Name="DropDownBorder" Background="{StaticResource gradientBrush}"  BorderThickness="1,1,1,1" CornerRadius="3" Margin="0,3,0,3"
                                        BorderBrush="{StaticResource borderBrush}"/>
                                    <!--***Scroll***-->
                                    <ScrollViewer Margin="0,3" SnapsToDevicePixels="True">
                                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsGrouping" Value="true">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </Trigger>
                            <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            </Trigger>
                            <Trigger Property="IsEditable" Value="true">
                                <Setter Property="IsTabStop" Value="false"/>
                                <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                                <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Triggers>
            </Style.Triggers>
        </Style>

        <!-- ComboBoxItem -->
        <Style x:Key="{x:Type ComboBoxItem}" TargetType="ComboBoxItem">
            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Foreground" Value="{StaticResource textBrush}"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBoxItem">
                        <Border Name="Border" Padding="2" BorderThickness="1" SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter TargetName="Border" Property="Background" Value="{StaticResource selectBrush}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ListBoxStyle1" TargetType="ListBox">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                </Style>
            </Style.Resources>
            <Setter Property="Background" Value="{StaticResource mainBrushTranspert}"/>
            <Setter Property="BorderBrush" Value="{StaticResource borderBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource textBrush}"/>
            <Setter Property="Margin" Value="3"/>
        </Style>

        <Style x:Key="ListboxItemStyle1"
       TargetType="{x:Type ListBoxItem}">
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="3"/>
                    <Setter Property="Margin" Value="2"/>
                </Style>
            </Style.Resources>

            <Setter Property="SnapsToDevicePixels" Value="true"/>
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border 
                        Name="Border"
                        Padding="2"
                        SnapsToDevicePixels="True">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                    Value="{StaticResource gradientBrushTranspert}"/>
                                <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource selectBrush}"/>
                                <Setter TargetName="Border" Property="BorderThickness" Value="1"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style  x:Key="{x:Type ListBoxItem}"
        TargetType="{x:Type ListBoxItem}"
        BasedOn="{StaticResource ListboxItemStyle1}">

        </Style>
    </Window.Resources>
    
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction 
                Command="{Binding ActivateMainWindowComm}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    
    <Grid Name="mainGrid" Background= "{StaticResource gradientBrush}">
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" MinWidth="200"/>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" MinWidth="200"/>
        </Grid.ColumnDefinitions>
        <GridSplitter Grid.Column="1" Grid.RowSpan="2" ShowsPreview="False" Width="3"
    HorizontalAlignment="Center" VerticalAlignment="Stretch" Background="{StaticResource borderBrush}"/>
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="32"></RowDefinition>
                <RowDefinition></RowDefinition>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="40"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="40"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Width="32"  Content="+" Style="{StaticResource ButtonStyle1}" Command="{Binding AddTaskComm}"/>
                <Border Grid.Column="1" BorderBrush="{StaticResource borderBrush}" BorderThickness="1" CornerRadius="5" Margin="3,2">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="40"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Label Content="🔍" HorizontalAlignment="Center" VerticalAlignment="Center" Foreground="{StaticResource textBrush}"/>
                        <Label Grid.Column="1" Content="{Binding AnnotationSearchText}" HorizontalAlignment="Left" VerticalAlignment="Center" Foreground="{StaticResource textBrush}"/>
                        <TextBox Grid.Column="1" Background="{StaticResource nullBrush}" Foreground="{StaticResource textBrush}" 
                     TextAlignment="Left" VerticalContentAlignment="Center" HorizontalContentAlignment="Center" 
                     BorderBrush="{StaticResource nullBrush}" Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}">
                            <!-- Command on event -->
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="TextChanged">
                                    <i:InvokeCommandAction 
                Command="{Binding SearchTextChangedComm}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                        </TextBox>
                    </Grid>
                </Border>
                <Button Grid.Column="2" Width="32" Content="🗑" Style="{StaticResource ButtonStyle1}" Command="{Binding DelTaskComm}"/>
            </Grid>
            <ScrollViewer Grid.Row="1" HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto" Style="{StaticResource StyleScrollViewer}">
                <ctr:ATreeView x:Name="taskTree" ItemsSource="{Binding TaskItems}" 
                       Background="{StaticResource mainBrushTranspert}" 
                       SelectedItem="{Binding SelectedWorkTask, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="MouseDown">
                            <i:InvokeCommandAction 
                Command="{Binding EmptyClickComm}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.Resources>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                                   Color="{StaticResource selectColor3}"/>
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                                   Color="{StaticResource selectColor}"/>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        </Style>

                        <HierarchicalDataTemplate DataType="{x:Type m:WorkTask}" ItemsSource="{Binding SubWorkTasks}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                    <ColumnDefinition></ColumnDefinition>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Column="0" Text="➔" Foreground="{StaticResource foundBrush}" FontSize="20" IsEnabled="{Binding IsFound}">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <Trigger Property="IsEnabled" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"/>
                                                </Trigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>

                                <StackPanel Grid.Column="1" Margin="2">
                                    <Border CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource borderBrush}">
                                        <TextBlock Text= "{Binding Name, StringFormat='📋 {0}'}" Foreground="{StaticResource textBrush}" FontSize="14" Margin="3" Padding="5,0"/>
                                    </Border>
                                </StackPanel>
                                <ComboBox SelectedIndex="{Binding Status}" Grid.Column="2" ItemsSource="{Binding Path=StatusList, UpdateSourceTrigger=PropertyChanged}" />
                                <StackPanel Grid.Column="3" Margin="2">
                                    <Border CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource borderBrush}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="⏳" Grid.Column="0" Foreground="{StaticResource textBrush}" FontSize="14" Margin="3" Padding="2,0"/>
                                            <TextBlock Text="{Binding ExecutionTimeWithSubs.TotalHours, StringFormat={}{0:#0.0}, Mode=OneWay}" Grid.Column="1" 
                                                   Foreground="{StaticResource textBrush}" FontSize="14" Margin="3" Padding="5,0"/>
                                        </Grid>
                                    </Border>
                                </StackPanel>
                                <StackPanel Grid.Column="4" Margin="2">
                                    <Border CornerRadius="2" BorderThickness="1" BorderBrush="{StaticResource borderBrush}">
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <TextBlock Text="⌚" Grid.Column="0" Foreground="{StaticResource textBrush}" FontSize="14" Margin="3" Padding="2,0"/>
                                            <TextBlock Text="{Binding ToCompleteTimeWithSubs.TotalHours, StringFormat={}{0:#0}, Mode=OneWay}" 
                                                   Grid.Column="1" Foreground="{StaticResource textBrush}" FontSize="14" Margin="3" Padding="2,0"/>
                                        </Grid>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </HierarchicalDataTemplate>

                    </TreeView.Resources>
                </ctr:ATreeView>
            </ScrollViewer>
        </Grid>
        <Grid x:Name="TaskTable" Grid.Column="2" Visibility ="{Binding TaskTableIsVisible}" Background="{StaticResource mainBrushTranspert2}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="{Binding Height, ElementName=mainGrid}">
            <Grid.Style>
                <Style TargetType="Grid">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=IsVisible}" 
                         Value="True">
                            <DataTrigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="MaxWidth">
                                        <DoubleAnimation From="0" To="3000" Duration="00:00:1"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                                <BeginStoryboard>
                                    <Storyboard TargetProperty="Opacity">
                                        <DoubleAnimation From="0" To="1" Duration="00:00:0.5"></DoubleAnimation>
                                    </Storyboard>
                                </BeginStoryboard>
                            </DataTrigger.EnterActions>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Grid.Style>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>
            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Label Content="{x:Static prop:Resources.tableTaskAnnotation1}" Grid.Column="0" Style="{StaticResource LabelAnnotation1}"/>
                <Label Content="{x:Static prop:Resources.TableTaskStatus}" Grid.Column="1" Style="{StaticResource LabelAnnotationMini}" HorizontalContentAlignment="Right"/>
                <ComboBox Grid.Column="2" DataContext="{Binding SelectedItem, ElementName=taskTree}" ItemsSource="{Binding StatusList}" SelectedIndex="{Binding Status, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            <TextBox x:Name="TaskName" Grid.Row="1" Template="{StaticResource TextBoxBaseControlTemplateTName}" Text="{Binding TaskName, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle1}"/>
            <Label Content="{x:Static prop:Resources.tableTaskAnnotation2}" Grid.Row="2" Style="{StaticResource LabelAnnotation1}"></Label>
            <Border x:Name="border" Grid.Row="3">
                <ScrollViewer HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Auto" Style="{StaticResource StyleScrollViewer}">
                    <TextBox x:Name="TaskDescription"  Template="{StaticResource TextBoxBaseControlTemplate}" Text="{Binding TaskDescription, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyle1}" HorizontalContentAlignment="Left" TextWrapping="Wrap" AcceptsReturn="True" VerticalAlignment="Stretch"/>
                </ScrollViewer>
            </Border>
            <Grid Grid.Row="4">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Label Content="{x:Static prop:Resources.tableTaskAnnotation3}" Grid.Column="0" Style="{StaticResource LabelAnnotation1}"/>
                <Label x:Name="TaskRegDate" Grid.Column="1" Style="{StaticResource LabelAnnotation1}" HorizontalContentAlignment="Right" Foreground="{StaticResource textBrush}">
                    <Label.Content>
                        <TextBlock Text="{Binding TaskRegTime, Mode=OneWay, StringFormat=\{0:g\}, ConverterCulture=ru}"/>
                    </Label.Content>
                </Label>
            </Grid>
            <Border Grid.Row="5" BorderBrush="{StaticResource borderBrush}" CornerRadius="2" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition Width="Auto" MinWidth="50"></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Content="{x:Static prop:Resources.tableTaskAnnotation4}" Grid.Column="0" Style="{StaticResource LabelAnnotation1}"/>
                    <TextBox Grid.Column="1" Template="{StaticResource TextBoxBaseControlTemplateForTHours}" Text="{Binding TableHours, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyleForNumeric}" Margin="3, 2">
                        <i:Interaction.Behaviors>
                            <v:AllowableCharactersTextBoxBehavior RegularExpression="^[0-9]+$" MaxLength="5" />
                        </i:Interaction.Behaviors>
                    </TextBox>
                </Grid>
            </Border>
            <Grid Grid.Row="6">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                    <ColumnDefinition Width="225"></ColumnDefinition>
                    <ColumnDefinition Width="49*"/>
                </Grid.ColumnDefinitions>
                <Label Content="{x:Static prop:Resources.tableTaskAnnotation5}" Grid.Column="0" Style="{StaticResource LabelAnnotation1}"/>
                <Label Grid.Column="1" Style="{StaticResource LabelAnnotation1}" HorizontalContentAlignment="Right" Foreground="{StaticResource textBrush}" Grid.ColumnSpan="2" Margin="5,0">
                    <Label.Content>
                        <TextBlock Text="{Binding ExecutionTime.TotalHours, StringFormat={}{0:#0.0}}" DataContext="{Binding SelectedItem, ElementName=taskTree, Mode=OneWay}"/>
                    </Label.Content>
                </Label>
            </Grid>
            <Border Grid.Row="7" BorderBrush="{StaticResource borderBrush}" CornerRadius="2" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="160"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>
                    <Label Content="{x:Static prop:Resources.tableTaskAnnotation8}" Grid.Column="0" Style="{StaticResource LabelAnnotation1}"/>
                    <Label x:Name="TaskFinishDate" Grid.Column="1" Style="{StaticResource LabelAnnotation1}" HorizontalContentAlignment="Right" Foreground="{StaticResource textBrush}">
                        <Label.Content>
                            <TextBlock Text="{Binding TaskFinishTime, Mode=OneWay, StringFormat=\{0:g\}, ConverterCulture=ru}"/>
                        </Label.Content>
                    </Label>
                </Grid>
            </Border>
            <Border Grid.Row="8" BorderBrush="{StaticResource borderBrush}" CornerRadius="2" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <ListBox x:Name="TableExecutors" Grid.Row="1" DataContext="{Binding TableExecutorsList}" ItemsSource="{Binding}" Style="{StaticResource ListBoxStyle1}" ScrollViewer.VerticalScrollBarVisibility="Auto">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Width="Auto">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition Width="40"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding}" Grid.Column="0" TextAlignment="Left"/>
                                        <Button Grid.Column="1" Content="✖" Style="{StaticResource ButtonStyle1}" FontSize="8" HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{Binding DataContext, ElementName=window}" Command="{Binding DelPersonComm}" CommandParameter="{Binding TemplatedParent.Content, Mode=OneWay, RelativeSource={RelativeSource Self}}"/>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                        <Label Grid.Row="0" Style="{StaticResource LabelAnnotationMini}" Content="{x:Static prop:Resources.tableTaskAnnotation6}"/>
                    </Grid>
                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Label Grid.Row="0" Style="{StaticResource LabelAnnotation1}" Content="{x:Static prop:Resources.tableTaskAnnotation7}" HorizontalContentAlignment="Center" FontSize="10"/>
                        <TextBox Grid.Row="1" Template="{StaticResource TextBoxBaseControlTemplate}" Text="{Binding TableNewPerson, UpdateSourceTrigger=PropertyChanged}" Style="{StaticResource TextBoxStyleForNumeric}" Margin="3, 2" FontSize="12" VerticalContentAlignment="Center">
                            <i:Interaction.Behaviors>
                                <v:AllowableCharactersTextBoxBehavior  MaxLength="25" />
                            </i:Interaction.Behaviors>
                        </TextBox>
                        <Button Grid.Row="2" Content="+👤" Style="{StaticResource ButtonStyle1}" HorizontalAlignment="Right" VerticalAlignment="Top" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Width="40" Margin="3" Command="{Binding AddPersonComm}"/>
                    </Grid>

                </Grid>
            </Border>
            <Grid Grid.Row="9">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                    <ColumnDefinition Width="120"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="1" Style="{StaticResource ButtonStyle1}" Content="{x:Static prop:Resources.Apply}" Command="{Binding SaveTableTaskComm}" MinWidth="120"/>
            </Grid>
        </Grid>
    </Grid>

</Window>
